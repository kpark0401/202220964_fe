<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx.xsd
           http://www.springframework.org/schema/data/jpa 
           http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">
           
           
    <!-- 컨트롤러가 위치한 패키지를 스캔 -->
    <context:component-scan base-package="kr.ac.kku.cs.wp" />

    <!-- spring test 에서 validation 주입하기 위해 필요함 -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
	    <property name="messageInterpolator">
	        <bean class="org.hibernate.validator.messageinterpolation.ParameterMessageInterpolator" />
	    </property>
	</bean>

    <!-- MVC 어노테이션 기반의 컨트롤러 활성화 -->
    <mvc:annotation-driven validator="validator" />
    
    <aop:aspectj-autoproxy />

    <!-- 뷰 리졸버 설정 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>
    
    <bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver"/>
    
    
    <!-- 정적 자원 핸들링 (CSS, JavaScript 등) -->
    <mvc:resources mapping="/html/**" location="/html/" />
    <mvc:resources mapping="/js/**" location="/js/" />
    <mvc:resources mapping="/image/**" location="/image/" />
    <mvc:resources mapping="/css/**" location="/css/" />
    <mvc:resources mapping="/uploads/**" location="file:/tmp/uploads/" />
    
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
	    <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
	    <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/webapp_seok"/>
	    <property name="username" value="seok"/>
	    <property name="password" value="seok"/>
	    <property name="maximumPoolSize" value="10"/>
	    <property name="minimumIdle" value="5"/>
	    <property name="idleTimeout" value="30000"/>
	    <property name="maxLifetime" value="1800000"/>
	    <property name="connectionTimeout" value="30000"/>
	</bean>
	
	<!-- JPA Repository Scan -->
    <jpa:repositories base-package="kr.ac.kku.cs.wp.wsd.*" />
    
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="kr.ac.kku.cs.wp.wsd" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
        </property>
    </bean>
    
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
	    <property name="dataSource" ref="dataSource"/>
	    <property name="packagesToScan" value="kr.ac.kku.cs.wp.wsd"/>
	    <property name="hibernateProperties">
	        <props>
	            <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
	            <prop key="hibernate.show_sql">true</prop>
	            <prop key="hibernate.format_sql">false</prop>
	            <prop key="hibernate.hbm2ddl.auto">update</prop>
	        </props>
	    </property>
	</bean>
    
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
	    <property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- JPA TransactionManager를 기본으로 설정 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- JpaTransactionManager -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
	    <property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
	<!-- Hibernate TransactionManager를 명시적으로 사용할 경우 -->
	<bean id="hTransactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
	    <property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<bean id="jdbcTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource" ref="dataSource" />
	</bean>
	
	
</beans>
